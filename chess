#define _CRT_SECURE_NO_WARNINGS

#include"game.h"
#include<stdio.h>
#include<stdlib.h>
#include<time.h>



int Isfull(char arr[ROW][COL],int row,int col)
{
      int i=0;
	  int j=0;
	  for(i=0;i<row;i++)
	  {
	      for(j=0;j<col;j++)
		  {
		      if(arr[i][j]==' ')
				  return 0;   //0表示棋盘没满
		  }
	  
	  }
	  return 1;  //1表示棋盘满了
}
//*******************************************************************************************************************************************************
char Iswin(char arr[ROW][COL],int row,int col)
{
	int i=0;
	int j=0;
	for(i=0;i<row;i++)
	{
	   if(arr[i][0]==arr[i][1]&&arr[i][1]==arr[i][2]&&arr[i][0]!=' ')
		  { return arr[i][0];
	   }
	}
	for(j=0;j<col;j++)
	{
	   if(arr[0][j]==arr[1][j]&&arr[1][j]==arr[2][j]&&arr[2][j]!=' ')
		  { return arr[0][j];
	   }
	   }
	if(arr[0][0]==arr[1][1]&&arr[1][1]==arr[2][2]&&arr[1][1]!=' ')
		{return arr[1][1];
	}
	if(arr[0][2]==arr[1][1]&&arr[1][1]==arr[2][0]&&arr[0][2]!=' ')
		{return arr[0][2];
	}
	if(1==Isfull(arr,row,col))
		{return 'P';
	}
	return 'C';
    

}
//**************************************************************************************************************************************************************
void Computermove(char arr[ROW][COL],int row,int col)            //电脑走
{                                                                  //77777777777777777777
       int x=0;
	   int y=0;
	   printf("电脑走的>:\n");
	   while(1)
	   {
		   x=rand()%row;
		   y=rand()%col;
		   if(arr[x][y]==' ')
		   {		   
			   arr[x][y]='@';
			   break;
		   }
	   }

}
//********************************************************************************************************************************************************
void displayboard(char arr[ROW][COL],int row,int col)   //显示出棋盘格式
{
	int i=0;                                                  //55555555555555555555555555555
	int j=0;
	for(i=0;i<row;i++)
		{
			for(j=0;j<col;j++)
			{
			   printf(" %c ",arr[i][j]);
			   if(j<col-1){
							   printf("|");	
			               }
			}		
			printf("\n");
			for(j=0;j<col;j++)
			{
				printf("---");
				if(j<col-1)
				{
				  printf("|");
				}
			}
				printf("\n");
	
		}
}
//*******************************************************************************************************************************************************************
void Playermove(char arr[ROW][COL],int row,int col)     //玩家走
{
	int x=0;
	int y=0;                                              //6666666666666666666666666666666
	while(1)
	{
	printf("请输入要走的坐标>:");
	scanf("%d%d",&x,&y);
	if((x>=1&&x<=row)&&(y>=1&&y<=col))
	{
		if(arr[x-1][y-1]==' ')
		{
		    arr[x-1][y-1]='*';
			break;
		}
		else
		{
			printf("该坐标已被占用\n");
		}
	}
	else
		printf("坐标错误\n");
	}
}
//*************************************************************************************************************************************************************
void emptyboard(char arr[ROW][COL],int row,int col)  //清空棋盘函数
{
   int i=0;                                          //44444444444444444444444444
   int j=0;
   for(i=0;i<row;i++)
   {
       for(j=0;j<col;j++)
	   {
	     arr[i][j]=' ';
	   }
    
   }
}
//*****************************************************************************************************************************************************
void game()      //游戏内容
{     
    char ret;                                  //333333333333333333333333333
	char board[ROW][COL]={0};   
    emptyboard(board,ROW,COL);//将棋盘上的空间初始为空,清空棋盘
	displayboard(board,ROW,COL);  //打印棋盘
	while(1)
	{
	//玩家走
	Playermove(board,ROW,COL);
	displayboard(board,ROW,COL);
	ret=Iswin(board,ROW,COL);
	if(ret!='C')
	{ break;
	}
	//电脑走
	Computermove(board,ROW,COL);
	displayboard(board,ROW,COL);
	ret=Iswin(board,ROW,COL);
	if(ret!='C')
	{
		break;}
	}
	if(ret=='*')
	{printf("恭喜你赢了\n");}
	else if(ret=='@')
		{printf("电脑赢了\n");
	}
	else if(ret=='P')
		{printf("平局\n");
	}
}
//******************************************************************************************************************************************************
void menu()                              //选择菜单
{                                           //2222222222222222222222
    printf("********************\n");
	printf("***1.play   0.exit**\n");
	printf("********************\n");
}
//***********************************************************************************************************************************************************
void chose()                       //游戏选择
{                                        //1111111111111111111111
	int input=0;
	srand((unsigned int)time(NULL));   //srand随机数生成器，使用time函数时间戳作为生成随机数的起点
	do
	{
		menu();
		printf("请输入你的选择>:");
		scanf("%d",&input);
		switch(input)
		{
		case 1:
			game();
			break;
		case 0:
			break;
		default:
			printf("输入错误，请重新输入>:");
			break;
		}
	}while(input);

}
//***************************************************************************************************************************************************************
int main()
{
    chose();
	return 0;
}
